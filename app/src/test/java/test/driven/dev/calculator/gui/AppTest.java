/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package test.driven.dev.calculator.gui;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;


class AppTest {

    Calc calculator = new Calc();
    @Test
    void HasAdd() {
        assertEquals(5, calculator.processInput("2 + 3"));
    }

    @Test
    void HasSubtract() {
        assertEquals(2, calculator.processInput("4 - 2"));
    }

    @Test
    void HasMultiply() {
        assertEquals(6, calculator.processInput("3 * 2"));
    }

    @Test
    void testDivide() {
        assertEquals(2, calculator.processInput("10 / 5"));
    }

    @Test
    void testPower() {
        assertEquals(8, calculator.processInput("2 ^ 3"));
    }

    @Test
    void testSquareRoot() {
        assertEquals(3, calculator.processInput("sqrt ( 9 )"));
    }

    @Test
    void testLogarithm() {
        assertEquals(2, calculator.processInput("log ( 100 )"));
    }

    @Test
    void testSine() {
        assertEquals(1, calculator.processInput("sin ( 90 )"));
    }

    @Test
    void testCosine() {
        assertEquals(0, calculator.processInput("cos ( 90 )"));
    }

    @Test
    void testTangent() {
        assertEquals(1, calculator.processInput("tan ( 45 )"));
    }

    @Test
    void testModulus() {
        assertEquals(1, calculator.processInput("5 % 2"));
    }

//     @Test
//     void testAbsolute() {
//         Calc calculator = new Calc();
//         Operator op = Operator.ABSOLUTE;
//         assertEquals(5, calculator.applyOp(-5, op, 0));
//     }

//     @Test
//     void testMaximum() {
//         Calc calculator = new Calc();
//         Operator op = Operator.MAX;
//         assertEquals(5, calculator.applyOp(2, op, 5));
//     }

//     @Test
//     void testMinimum() {
//         Calc calculator = new Calc();
//         Operator op = Operator.MIN;
//         assertEquals(2, calculator.applyOp(2, op, 5));
//     }

//   /*  @Test
//     void testAverage() {
//         Calc calculator = new Calc();
//         Operator op = Operator.AVERAGE;
//         assertEquals(3, calculator.applyOp(2, op, 3, 4));
//     }
// */
//   /*  @Test
//     void testSum() {
//         Calc calculator = new Calc();
//         Operator op = Operator.SUM;
//         assertEquals(9, calculator.applyOp(2, op, 3, 4));
//     }*/ 

    
}
