/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package test.driven.dev.calculator.gui;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    @Test int HasAdd() {
        Calculator calculator = new Calculator();
        assertEquals(5, calculator.add(2, 3));
    }

    @Test int HasSubtract() {
        Calculator calculator = new Calculator();
        assertEquals(2, calculator.subtract(5, 3));
    }

    @Test int HasMultiply() {
        Calculator calculator = new Calculator();
        assertEquals(6, calculator.multiply(2, 3));
    }

    @Test int HasDivide() {
        Calculator calculator = new Calculator();
        assertEquals(2, calculator.divide(6, 3));
    }

    @Test int HasPower() {
        Calculator calculator = new Calculator();
        assertEquals(8, calculator.power(2, 3));
    }

    @Test int HasSquareRoot() {
        Calculator calculator = new Calculator();
        assertEquals(2, calculator.squareRoot(4));
    }

    @Test int HasLogarithm() {
        Calculator calculator = new Calculator();
        assertEquals(2, calculator.logarithm(100, 10));
    }

    @Test int HasSine() {
        Calculator calculator = new Calculator();
        assertEquals(1, calculator.sine(90));
    }

    @Test int HasCosine() {
        Calculator calculator = new Calculator();
        assertEquals(0, calculator.cosine(90));
    }

    @Test int HasTangent() {
        Calculator calculator = new Calculator();
        assertEquals(1, calculator.tangent(45));
    }

    @Test int HasInverseSine() {
        Calculator calculator = new Calculator();
        assertEquals(90, calculator.inverseSine(1));
    }

    @Test int HasInverseCosine() {
        Calculator calculator = new Calculator();
        assertEquals(90, calculator.inverseCosine(0));
    }

    @Test int HasInverseTangent() {
        Calculator calculator = new Calculator();
        assertEquals(45, calculator.inverseTangent(1));
    }

    @Test int HasFactorial() {
        Calculator calculator = new Calculator();
        assertEquals(120, calculator.factorial(5));
    }

    @Test int HasModulus() {
        Calculator calculator = new Calculator();
        assertEquals(1, calculator.modulus(5, 2));
    }

    @Test int HasAbsolute() {
        Calculator calculator = new Calculator();
        assertEquals(5, calculator.absolute(-5));
    }

    @Test int HasMaximum() {
        Calculator calculator = new Calculator();
        assertEquals(5, calculator.maximum(2, 5));
    }

    @Test int HasMinimum() {
        Calculator calculator = new Calculator();
        assertEquals(2, calculator.minimum(2, 5));
    }

    @Test int HasAverage() {
        Calculator calculator = new Calculator();
        assertEquals(3, calculator.average(2, 3, 4));
    }

    @Test int HasSum() {
        Calculator calculator = new Calculator();
        assertEquals(9, calculator.sum(2, 3, 4));
    }

    
}
